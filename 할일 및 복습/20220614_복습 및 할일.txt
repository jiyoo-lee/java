20220614 오늘 할일 및 복습

0. OOP 객체지향프로그래밍
[캡슐화 + 은닉화]
public,private,protected,default
getter/setter(private 사용시) : 간접적 접근 방식
return / 값설정

[추상화]
abstraction 추상화 클래스 + interface
실제 클래스는 아니지만 가져와서 쓰기는 해야하는 것.
쓰는 이유 : 1.코드를 정형화하기 위해
2.개별적인 메소드를 막는 역할)
3.확장성(interface)

[다형성] - 
*overriding : 부모의 method,멤버를 상속받는 형태
*overlaoding : 상속과 관계없이 자식 class에서 부모 method를
상속을 받아 변경하여 사용하는것  

[상속성,재사용] - extend(조상클래스 하나에 하나 or 여러 자식), 
implement(다수의 조상클래스 + 자손 클래스) 
재사용 - 재귀함수,인터페이스를 다른 클래스에도 재사용 가능

--------------------------------------------------------------------
[Thread] - 작동시키는 프로세스 
[Multi-Thread] - Thread (2)개 이상 작동하는 프로세스
메소드 실행합니다. A,B 동시 실행 (섞여서 출력됨)
--------------------------------------------------------------------
Package 관련 -> 
Timeloop -> try, catch
Arrays
동기화, 비동기화
-------------------------------------------------------------------
1.abstract + interface 차이점 및 응용(return 등등)
2. Package
3. getter setter(얘는 값설정만한다)
4. 패키지가 다른 main 다른 main에서 호출하기
5. try catch


		if(data3.equals("증가")) {
			this.loops();			
		}
		else {
			this.loops();
		}

6. 시험 : 정처기 필기 쉬운 파트 수준 필기12문제 실기7
 1. 운영체제 목적이란?
 2. IP주소란? -
 localhost : 127.0.0.1 
 - 자신의 pc를 이야기함
 3. domain이란?
 4. TCP / IP란?
 5. FTP, SMTP, HTTP, SNMP, DNS란?
 6. 메소드가 뭔지, 자료형이 어떤게 있는지 배열 설명이 올바른게 무엇인지  
 7. 스캐너 구성을 어떻게 하는지
 8. THIS에 대한 설명이 옳지않은것은?

내일 시험 + 다음주 금요일 실기 시험(범위: 인터페이스까지)