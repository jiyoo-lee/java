202200704 할일 및 복습

1. db 

create - db, table

create table product(


);
table - > field

* 필드의 속성 : 
숫자형, 날짜형, 문자열로 나뉘어져 있다.

[숫자]
자동증가값(중복되지 않는 값)
1)int : int(1) ex) 0~9까지 int(2) ex)0~99까지 
int(4) : 0~9999 까지라는 뜻
()안의 숫자가 자릿수

2)tinyint :  tinyint(3)까지밖에 안됨 범위: 0~255까지 -> 주로 내부 시스템 개발시
3)smallint(7) : 0~65535까지 
4)mediumint(8) : 0~16700000 
5)int(최대10) : 0 ~ 4290000000
6)bigint(17) : 0 ~ 18400000000000000
long은 없음 대신 bigint 



[문자]
-----바이너리 형태-------
char() 최대 255까지 -> 고정길이타입 ex)char(10)이면 어떤길이여도 10만큼의 용량을 차지함.
영어 : 100자 한글 : 45자 
아이디, 고객명과 같은것을 쓸때 많이 씀
varchar() 최대: 65,535자까지 -> 가변길이타입 실제저장된 값에 맞게  최적화 된다.
영어: 255자 한글: 200자 
이메일, 주소같은 것을 쓸때 많이 씀
--------텍스트 타입--------
tinytext-> 괄호 없음
게시판 제목에 많이 씀, 상품상세 설명
범위는 따로
text -> 한글 : 6만자 
게시판 내용글, url경로
mediumtext-> 한글 : 11만자 
이미지 및 상품상세 기재 표시 상세보기 등등
longtext-> 한글 : 4억



[실수]
float(12)
double(38) : float 타입도 포함 대략적인 숫자 데이터 값을 표현할때 사용 부동소수점
double(m,d) m은 소수 부분을 포함한 실수의 총 자릿수 d는 소수 부분의 자릿수 
decimal : 고정소수점, 소수부를 정확하게 저장하는 용도로 사용



[날짜 + 시간] - server 시간으로 세팅
date -> default(구성형태): 
ex) date -> default '0001.01.01'(년월일을 이렇게 하겠다고 지정)
date default '0001-01-01' 값이 들어왔을때 저장되는 형태 
5.0 버전 -> '0000.00.00' 상위버전은 위와 같이 쓸 것
time -> default(구성형태) 
ex) 예 time default  '01:00:00'
time default  '01.00.00'
time default '010000' 

datetime -> default '0001-01-01 01:00:00';
(직접 프로그래머가 시간기준을 적용함)

timestamp(datetime이랑 거의 비슷, 자동으로 입력됨- 시간, 날짜 )
timestamp -> default '0001-01-01 01:00:00';



[******null, not null****]
pmid char(7) not null -> pmid라는 필드명에 한글 6자까지 무조건 입력필수값
ptext text null -> ptext라는 필드명 다량의 문자를 입력 하지만 필수값은 아님



[자동증가값]
auto_increment (테이블에서 딱 한번만 extra) - 절대 중복되지 않음
1,2,3,4,5,6,7,8,9,10
1,2,3,4,5,6,8,9,10 (7을 삭제해서 없어도 증가만 함)



[key]
primary key[중복되지 않는 값,고유한 값 기본키] : ex) auto_increment, 회원id
unique key
기본키 안에 유니크키가 포함되어 있으며 여러 유니크 키들 중에서 primary key가 될 수 있는 칼럼들이 있을 수 있고
단, not null이어야 됨
[후보키]
[외래키] 



[update] - 수정 
update 테이블명 set 필드명 = '수정 할 값' where 필드명 = '중복 되지 않는 레코드'



[alter] 
- table에서 컬럼을 조정할때 사용
alter table 테이블명 add 필드명 필드속성 (table 필드를 추가할때)
ex> alter table h_member add haddr tinytext null;

**원하는 필드만 지우기**
alter table 테이블명 drop 필드명;

**원하는 위치에 추가**
alter table 테이블명 add 필드명 필드속성 after 신규 생성 필드 다음필드명 (원하는 위치에 추가할때)
ex> alter table h_member add h_addr tinytext null after hcity;

**
alter table 테이블명 modify 필드명 필드속성 (해당 필드의 속성을 변경 할 수 있음)
※단 필드속성중 null값에 대한 부분은 명확해야 합니다. 데이터가 이미 null있을경우 not null로 처리가 안됨 (update를 이용하여 해당 필드에 있는 데이터를 모두 삭제 후에 not null 적용)
**필드속성을 null에서 not null로 변경하는 법**
update 테이블명 set 바꿀 필드명 = ' '; (null로 기존에 있던걸 공백으로 변경)




password: 사용자 1234567 -> 암호화 후 저장해야함 
(암호화 방식) 
- base64 : 기본 암호화 
- AES
- SHA
- MD5
- HASH 
- 복합사용( 예: base64 + md5)
select 12345, sha('12345') as pass;




create table h_member(
hidx int(8) not null auto_increment,                         -자동증가값
hid char(200) not null,			-아이디
hpass varchar(250) not null,			-암호
hemail char(100) null,			-이메일
htel char(11) not null,			-전화번호
hcity char(2) not null,			-거주지
hpart tinytext null,				- 관심분야(배열로 처리)
hage char(10) not null,			- 연령
hindate timestamp not null default current_timestamp,		- 가입일자시간
hdrop_date datetime not null default '0001-01-01 01:00:00',		-휴면,탈퇴일자
primary key(hidx,hid)	-기본키(자동증가값, 아이디 중복x)
);

=========디비 설계 연습을 많이 해야 함===============================================

timestamp는 컨버팅을 따로 해줘야 할 수도 있음 버전에 따라 다름
5.5 이상 사용방법 : default current_timestamp

drop_date (탈퇴, 휴면계정)

hindate : 가입시각(서버기준)
hindate timestamp not null default '0001-01-01 01:00:00', : 자동입력
hindate datetime not null default '0001-01-01 01:00:00', : 수동 입력

tinytext
1,0,0,0,1 이런식으로 받겠다는 뜻 


[enum]
[체크박스, select bar, 라디오 버튼 사용시]
enum('window','office','xbox') not null default
enum : field 생성시 값을 정하여 선택된 값만 받기 위할때 사용하는 속성 값
예)agree1 enum('Y','N')not null default 'N';
sms_ad enum('Y','N')not null default 'N'; 


===================insert===================================================

insert into h_member (hidx,hid,hpass,hemail,htel,hcity,hpart,hage,hindate,hdrop_date)values("0","hong",md5("a123456"),"hong@gmail","01012245688","02","0,1,1,0,0","20","2022-07-04 01:00:00","0001-01-01 01:00:00");

create table event(
eidx int(8) not null auto_increment,                         
eid char(200) not null,			
epass varchar(250) not null,		
etel char(11) not null,	
e_email char(100)not null,									
ecode char(10) null,		
esoft tinytext not null,
primary key(eidx), 고유값이지만 중복은 이루어지지 않음 기본키
unique key(e_id) - 중복 발생을 막기위한 것 고유키 				
);


gitmind(무료), visual pradigm(무/유료)


create table free (
fidx int(8) not null auto_increment,
fsubject varchar(220) not null,
fwriter char(80) not null,
fpass char(20) not null,
ftext text not null,
fcount int(6) not null default '0',
fdate date not null default '0001-01-01',
primary key(fidx,fwriter),
unique key(fidx)
);


create table addr(
pidx bigint(15) not null auto_increment,
pcode varchar(5) not null,
psido varchar(100) not null,
pgu text not null,
pdoro varchar(200) not null,
pdong varchar(100) not null,
primary key(pidx)
);

mysql + mariadb 는 명령어가 같음

[백업] -> 백업 폴더 하나 만들어서 사용
mysqldump -u 사용자명 -p 데이터베이스 이름 > 경로/데이터베이스명.sql

C:\Program Files\MySQL\MySQL Server 8.0\bin>mysqldump -u apink -p shop > c:\backup\shop.sql 
[원복]
C:\Program Files\MySQL\MySQL Server 8.0\bin>mysql -u apink -p shop < c:\backup\shop.sql
mysql -u 사용자명 -p 데이터베이스명  < 경로/데이터베이스명.sql